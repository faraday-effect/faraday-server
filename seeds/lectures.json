[
  {
    "_id": "flask-static-templates",
    "segments": [
      {
        "type": "intertitle",
        "_id": "intro",
        "title": "Static Templates",
        "content": [
          "This route handler returns the contents of the template file `hello.html`."
        ]
      },
      {
        "type": "listing",
        "_id": "view-function",
        "meta": {
          "language": "python",
          "fileName": "app.py"
        },
        "content": [
          "@app.route('/')",
          "def hello_world():",
          "    return render_template('hello.html')"
        ]
      },
      {
        "type": "note",
        "_id": "template",
        "content": [
          "The `hello.html` file itself contains the following."
        ]
      },
      {
        "type": "listing",
        "_id": "template",
        "meta": {
          "language": "html",
          "fileName": "templates/hello.html"
        },
        "content": [
          "<!DOCTYPE html>",
          "<html lang=\"en\">",
          "<head>",
          "    <meta charset=\"UTF-8\">",
          "    <title>Hello</title>",
          "</head>",
          "<body>",
          "    <h1>Hello, World</h1>",
          "    <p>This is a Flask template.</p>",
          "</body>",
          "</html>"
        ]
      }
    ]
  },
  {
    "_id": "flask-basic-templates",
    "segments": [
      {
        "type": "intertitle",
        "_id": "intro",
        "title": "Basic Templates",
        "content": [
          "The previous example isn’t really a \"template\"; it doesn't",
          "provide any way to change the content of the page at run time.",
          "It's simply a static HTML file that’s rendered exactly as is.",
          "",
          "Templates are more useful when they include dynamically generated",
          "content from the Python view function. Consider the following template:"
        ]
      },
      {
        "type": "listing",
        "_id": "template",
        "meta": {
          "language": "html",
          "fileName": "templates/hello-name.html"
        },
        "content": [
          "<!DOCTYPE html>",
          "<html lang=\"en\">",
          "<head>",
          "    <meta charset=\"UTF-8\">",
          "    <title>Hello</title>",
          "</head>",
          "<body>",
          "    <h1>Hello, {{ name }}</h1>",
          "    <p>This is a Flask template.</p>",
          "</body>",
          "</html>"
        ]
      },
      {
        "type": "note",
        "_id": "double-mustache",
        "content": [
          "In the `h1` tag, note the `{{ name }}` syntax. The double curly braces",
          "enclose the name of a template variable whose value will be interpolated",
          "into the HTML. That is, the entire sequence `{{ name }}` will be",
          "replaced by the value of the `name` variable that is passed to the",
          "template from the Python view function, as illustrated next."
        ]
      },
      {
        "type": "listing",
        "_id": "view-function",
        "meta": {
          "language": "python",
          "fileName": "app.py"
        },
        "content": [
          "@app.route('/name')",
          "def hello_name():",
          "    return render_template('hello-name.html', name='Fred Ziffle')"
        ]
      },
      {
        "type": "note",
        "_id": "result",
        "content": [
          "The `hello_name` view function renders the `hello-name.html` template and supplies",
          "the string `'Fred Ziffle'` as the value of the `name` template variable.",
          "The resulting `h1` element will be:"
        ]
      },
      {
        "type": "listing",
        "_id": "result",
        "meta": {
          "language": "html"
        },
        "content": [
          "<h1>Hello, Fred Ziffle</h1>"
        ]
      }
    ]
  }
]
